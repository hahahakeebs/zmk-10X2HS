#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // default: 600

#define AS(keycode) &as LS(keycode) keycode

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_L_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 33 34 29 13 12 11 10 32>;
        };

        hsl: homerow_shift_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_L_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <5 15 25 6 16 26 7 8 9 9 17 18 19 27 28 34 33 29 32 13 12 11 10>;
        };

        com_scln: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        pd_cln: period_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_R_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 32 31 16 17 18 19>;
        };

        hsr: homerow_shift_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_R_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <190>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 31 32 16 17 18 19>;
        };

        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        q {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <1 2>;
        };

        v {
            bindings = <&kp V>;
            key-positions = <6 7>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <7 8>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <12 13>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <13 14>;
        };

        j {
            bindings = <&kp J>;
            key-positions = <3 4>;
        };

        k {
            bindings = <&kp K>;
            key-positions = <9 10>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <4 5>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <10 11>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <16 17>;
        };

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 7 0>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <9 10 5>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 6>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <1 7>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 8>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <8 9>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <7 8 9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp W  &kp F  &kp G        &kp M          &kp L  &kp U
&kp A  &kp R  &kp S        &kp N          &kp E  &kp I
&kp C  &kp D  &kp T        &kp H          &kp O  &kp Y
              &kp SPACE    &kp BACKSPACE
            >;
        };
    };
};
